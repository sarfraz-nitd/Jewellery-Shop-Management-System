/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew.shiva.krishna.jewellers;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.printing.PDFPageable;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author sarfraz
 */
public class OrderForm extends javax.swing.JFrame {

    DefaultTableModel tableModel;
    DefaultTableModel ordTableModel;
    String searchedId="N/A";
    int selected = 0;
    float total = 0;
    
    String myPhone = "";
    String myTin = "";
    float vatPercentage = 1;

    /**
     * Creates new form OrderForm
     */
    public OrderForm() {
        this.getContentPane().setBackground(java.awt.Color.decode("#0041C2"));
        initComponents();
        newItemNameField.setEditable(false);
        newItemNameField.setBackground(Color.GRAY);
        updateTable("");
        
        JSONArray parray = JsonClass.getJsonArray(Constants.PREFERENCES_FILE);
        for (int i = 0; i < parray.size(); i++) {
            JSONParser parser = new JSONParser();
            try {
                Object o = parser.parse(parray.get(i).toString());
                JSONObject obj = (JSONObject) o;
                myPhone = obj.get("phone").toString();
                myTin = obj.get("tin").toString();
                vatPercentage = Float.parseFloat(obj.get("vat").toString());
            } catch (ParseException ex) {
                Logger.getLogger(SaleItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (table.getSelectedRow() != -1) {
                    selected = 1;
                    searchedId = table.getValueAt(table.getSelectedRow(), 0).toString();
                    itemNameField.setText(table.getValueAt(table.getSelectedRow(), 1).toString());
                }
            }
        });
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateTv = new datechooser.beans.DateChooserCombo();
        itemNameField = new javax.swing.JTextField();
        qtyField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        opName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        checkBox = new javax.swing.JCheckBox();
        newItemNameField = new javax.swing.JTextField();
        weightField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rateField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labourCostField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        deliveryDate = new datechooser.beans.DateChooserCombo();
        jLabel12 = new javax.swing.JLabel();
        opPhone = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        opAddress = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        advancePaymentField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        totalCostField = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ordItemTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(350, 100));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Select Item From Stock ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ordered Quantity");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Date");

        dateTv.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 18));

        itemNameField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemNameFieldKeyReleased(evt);
            }
        });

        qtyField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Ordered By ");

        opName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Pieces");

        checkBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        checkBox.setText("Enter New Item ");
        checkBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxItemStateChanged(evt);
            }
        });

        newItemNameField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        weightField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Weight");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("gram");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Rate ");

        rateField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("/ gram");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Labour Cost");

        labourCostField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Delivery Date");

        deliveryDate.setCalendarPreferredSize(new java.awt.Dimension(350, 200));
        deliveryDate.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 18));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Phone No. ");

        opPhone.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Address ");

        opAddress.setColumns(20);
        opAddress.setRows(5);
        jScrollPane2.setViewportView(opAddress);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Advanced Payment ");

        advancePaymentField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Rs.");

        totalCostField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        totalCostField.setText("Rs.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("/ gram");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Total Amount :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(checkBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dateTv, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                                .addComponent(itemNameField)
                                .addComponent(newItemNameField))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labourCostField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                    .addComponent(rateField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(weightField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(qtyField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addGap(33, 33, 33)
                        .addComponent(advancePaymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(totalCostField, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(opName, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(deliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dateTv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(itemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBox)
                    .addComponent(newItemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labourCostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deliveryDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalCostField)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advancePaymentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock Id", "Item Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        table.setModel(tableModel);
        table.setRowHeight(40);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(200);
            table.getColumnModel().getColumn(0).setPreferredWidth(200);
            table.getColumnModel().getColumn(0).setMaxWidth(200);
        }

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Save Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        ordItemTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ordTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Qty", "Weight", "Rate", "L Cost", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        ordItemTable.setModel(ordTableModel);
        ordItemTable.setRowHeight(40);
        ordItemTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(ordItemTable);
        if (ordItemTable.getColumnModel().getColumnCount() > 0) {
            ordItemTable.getColumnModel().getColumn(0).setMinWidth(200);
            ordItemTable.getColumnModel().getColumn(0).setPreferredWidth(200);
            ordItemTable.getColumnModel().getColumn(0).setMaxWidth(200);
        }

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Ordered Items");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(332, 332, 332))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameFieldKeyReleased
        selected = 0;
        String keyword = itemNameField.getText();
        updateTable(keyword);
    }//GEN-LAST:event_itemNameFieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
        String date = dateTv.getText();
        String dDate = deliveryDate.getText();
        String orderedBy = opName.getText();
        String phone = opPhone.getText();
        String address = opAddress.getText();
        String advance = advancePaymentField.getText();
      

      
        if (orderedBy.equals("")) {
            AlertMessage msg = new AlertMessage("Please enter the 'Ordered By' Fiels");
        } else if (phone.equals("")) {
            AlertMessage msg = new AlertMessage("Please enter the phone no. in correct format ");
        } else if (address.equals("")) {
            AlertMessage msg = new AlertMessage("Please enter the address in correct format ");
        } else if (advance.equals("") || !Helper.priceFormatCheck(advance)) {
            AlertMessage msg = new AlertMessage("Please enter the advance payment in correct format ");
        } else {
            JSONArray mainArray = JsonClass.getJsonArray(Constants.ORDERS_FILE);

            
            // making first json object for customer details
            JSONArray array = new JSONArray();
            JSONObject o = new JSONObject();
            String ordId = "ORD_" + getId();
            o.put("orderId", ordId);
            o.put("date", date);
            o.put("deliveryDate", dDate);
            o.put("orderedBy", orderedBy);
            o.put("phone", phone);
            o.put("address", address);
            o.put("advancePayment", advance);
            o.put("totalAmount", total);
            
            array.add(o);
            
            for(int i=0;i<ordTableModel.getRowCount();i++){
                JSONObject obj = new JSONObject();
                
                obj.put("itemName", ordTableModel.getValueAt(i, 0));
                obj.put("orderedQty", ordTableModel.getValueAt(i, 1));
                obj.put("weight", ordTableModel.getValueAt(i, 2));
                obj.put("rate", ordTableModel.getValueAt(i, 3));
                obj.put("labourCost", ordTableModel.getValueAt(i, 4));
                obj.put("total", ordTableModel.getValueAt(i, 5));
                
                array.add(obj);
            }
            mainArray.add(array);
            FileWriter.write(Constants.ORDERS_FILE, mainArray.toString());
            
            printOrder(array);
            
            dispose();
            //AlertMessage msg = new AlertMessage("Order has been saved successfully...!!");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    public void printOrder(JSONArray array){
        try {
            JSONObject obj = (JSONObject) array.get(0);
            String id=obj.get("orderId").toString();
            String orderedBy = obj.get("orderedBy").toString();
            String phone = obj.get("phone").toString();
            String address = obj.get("address").toString();
            String date = obj.get("date").toString();
            String dDate = obj.get("deliveryDate").toString();
            String advance = obj.get("advancePayment").toString();
            String totalAmt = obj.get("totalAmount").toString();
            
            String path = "";
            
            JSONParser parser = new JSONParser();
            Object o;
            Document document = new Document();
            path = Helper.getFilePath() + "\\order_" + id + ".pdf";
            PdfWriter.getInstance(document, new FileOutputStream(path));                    //change the name of the file according to the cudtomer id
            document.open();
            //shopName.setAlignment(Element.ALIGN_CENTER);
            Image image;
            float[] cw = new float[]{3f, 6f};
            PdfPTable shopNameTable = new PdfPTable(2);
            shopNameTable.setWidths(cw);
            shopNameTable.setWidthPercentage(100);
            PdfPCell cl;
            try {
                image = Image.getInstance(Constants.SHOP_LOGO_URL);
                image.scaleAbsolute(55, 40);
                cl = new PdfPCell(image);
                cl.setHorizontalAlignment(Element.ALIGN_RIGHT);
                cl.disableBorderSide(Rectangle.BOX);
                shopNameTable.addCell(cl);
                //document.add(image);

            } catch (BadElementException ex) {
                Logger.getLogger(SaleItem.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(SaleItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            Paragraph shopName = new Paragraph(Constants.SHOP_NAME, FontFactory.getFont(FontFactory.TIMES_BOLD, 22, Font.BOLD, BaseColor.BLACK));
            cl = new PdfPCell(shopName);
            
            cl.setHorizontalAlignment(Element.ALIGN_LEFT);
            cl.setVerticalAlignment(Element.ALIGN_CENTER);
            cl.disableBorderSide(Rectangle.BOX);
            shopNameTable.addCell(cl);
            
            document.add(shopNameTable);
            //document.add(shopName);
            Paragraph addr = new Paragraph("             "+Constants.SHOP_ADDRESS, FontFactory.getFont(FontFactory.TIMES, 14, Font.ITALIC, BaseColor.BLACK));
            addr.setAlignment(Element.ALIGN_CENTER);
            document.add(addr);
            //adding header including TIN and date
            PdfPTable tbl = new PdfPTable(2);
            tbl.setWidthPercentage(100);
            PdfPCell cel;
           /* if (!myTin.equals("")) {
                cel = new PdfPCell(new Phrase("TIN/VAT - " + myTin, FontFactory.getFont(FontFactory.TIMES_ROMAN, 10)));
            } else {*/
                cel = new PdfPCell(new Phrase("Date - " + getDateFormat() + "    " + getTimeFormat(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 10)));
            //}
            cel.setHorizontalAlignment(Element.ALIGN_LEFT);
            cel.disableBorderSide(Rectangle.BOX);
            tbl.addCell(cel);
            /*Paragraph p = new Paragraph("Date - " + getDateFormat() + "    " + getTimeFormat(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 10));
             Paragraph p1 = new Paragraph("Phone : 1234567890", FontFactory.getFont(FontFactory.TIMES_ROMAN, 10));
             Phrase t = new Phrase();*/
            /*cel = new PdfPCell(new Phrase("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 10)));
            cel.disableBorderSide(Rectangle.BOX);
            cel.setHorizontalAlignment(Element.ALIGN_RIGHT);
            tbl.addCell(cel);

            cel = new PdfPCell();
            cel.disableBorderSide(Rectangle.BOX);
            cel.setHorizontalAlignment(Element.ALIGN_RIGHT);
            tbl.addCell(cel);*/

            if (myPhone.equals("")) {
                cel = new PdfPCell(new Phrase("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 10)));
            } else {
                cel = new PdfPCell(new Phrase("Phone : " + myPhone, FontFactory.getFont(FontFactory.TIMES_ROMAN, 10)));
            }
            cel.disableBorderSide(Rectangle.BOX);
            cel.setHorizontalAlignment(Element.ALIGN_RIGHT);
            tbl.addCell(cel);

            document.add(tbl);
              //order form
            Paragraph orderhead = new Paragraph("             Order Placed", FontFactory.getFont(FontFactory.TIMES, 16, Font.ITALIC, BaseColor.BLACK));
            orderhead.setAlignment(Element.ALIGN_CENTER);
            document.add(orderhead);
            
            Paragraph p = new Paragraph();
            for (int i = 0; i < 130; i++) {
                p.add("-");
            }
             //adding horizontal line
            document.add(p);
            
            //adding customer details
            Paragraph oid = new Paragraph("Order Id -             " + id, FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            document.add(oid);
            Paragraph cname = new Paragraph("Name -                   " + orderedBy, FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            document.add(cname);
            Paragraph cphone = new Paragraph("Phone -                  " + phone, FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            document.add(cphone);
            Paragraph caddress = new Paragraph("Address -               " + address, FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            document.add(caddress);
            //adding horizontal line
            document.add(p);
            document.add(new Paragraph(" "));
            
            //body
            float[] columnWidths = new float[]{1f, 5f, 3f, 3f, 2f, 3f, 3f};
            PdfPTable table = new PdfPTable(7);
            table.setWidthPercentage(100);
            table.setWidths(columnWidths);

            table.addCell("S No.");
            table.addCell("Item Name");
            table.addCell("Quantity");
            table.addCell("Weight");
            table.addCell("Price / gram");
            table.addCell("Labour Cost/gram");
            table.addCell("Amount");
            
            for(int i=1;i<array.size();i++){
                obj = (JSONObject) array.get(i);
                table.addCell(i+"");
                table.addCell(obj.get("itemName").toString());
                table.addCell(obj.get("orderedQty").toString());
                table.addCell(obj.get("weight").toString());
                table.addCell(obj.get("rate").toString());
                table.addCell(obj.get("labourCost").toString());
                table.addCell(obj.get("total").toString());
            }
            if (array.size() < 16) {
                    PdfPCell c = new PdfPCell(new Paragraph("1",FontFactory.getFont(FontFactory.TIMES,10, Font.ITALIC, BaseColor.WHITE)));
                    c.setUseVariableBorders(true);
                    c.setBorderColorTop(BaseColor.WHITE);
                    c.setBorderColorBottom(BaseColor.WHITE);
                    for (int i = 0; i < 16 - array.size(); i++) {
                        table.addCell(c);
                        table.addCell(c);
                        table.addCell(c);
                        table.addCell(c);
                        table.addCell(c);
                        table.addCell(c);
                        table.addCell(c);
                    }
                }
            
            PdfPCell cell = new PdfPCell(new Paragraph("Total     "));
            cell.setColspan(6);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(cell);
            table.addCell(totalAmt+"");
            
            cell = new PdfPCell(new Paragraph("Advance     "));
            cell.setColspan(6);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(cell);
            table.addCell(advance+"");
            
            cell = new PdfPCell(new Paragraph("Remaining Balance     "));
            cell.setColspan(6);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(cell);
            table.addCell((total-Float.parseFloat(advance))+"");
            
            document.add(table);
            
            Paragraph delDate = new Paragraph("Delivery Date : "+dDate, FontFactory.getFont(FontFactory.TIMES, 14, Font.ITALIC, BaseColor.BLACK));
            delDate.setAlignment(Element.ALIGN_RIGHT);
            document.add(delDate);
            
             //adding terms and conditions
            File file = new File(Constants.TERMS_AND_CONDITIONS_FILE);
            if (file.exists()) {
                document.add(new Paragraph("Terms and Conditions : ", FontFactory.getFont(FontFactory.TIMES_ITALIC, 12)));
                document.add(new Paragraph(FileWriter.read(Constants.TERMS_AND_CONDITIONS_FILE), FontFactory.getFont(FontFactory.TIMES_ITALIC, 10)));
            }

            Paragraph sign = new Paragraph("Authorized Signature", FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            sign.setAlignment(Element.ALIGN_RIGHT);
            document.add(sign);

            Paragraph msg = new Paragraph("THANKS FOR VISIT", FontFactory.getFont(FontFactory.TIMES_BOLD, 14));
            msg.setAlignment(Element.ALIGN_CENTER);
            document.add(msg);
            
            //adding horizontal line
            Paragraph p1 = new Paragraph();
            for (int i = 0; i < 130; i++) {
                p1.add("-");
            }
            document.add(p1);
            
            Paragraph p2 = new Paragraph("This is a Computer Generated Invoice.",FontFactory.getFont(FontFactory.TIMES, 8, Font.ITALIC, BaseColor.BLACK));
            p2.setAlignment(Element.ALIGN_CENTER);
            document.add(p2);

            Paragraph p3 = new Paragraph("Powered By : shopeasyweb.tk",FontFactory.getFont(FontFactory.TIMES, 12, Font.ITALIC, BaseColor.BLACK));   
            p3.setAlignment(Element.ALIGN_RIGHT);
            document.add(p3);
            
            
            
            document.close();
            
            printWithPrinter(path);
            
        } catch (DocumentException ex) {
            Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(OrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    static PDDocument document;
    public void printWithPrinter(String path) {
        try {
            document = PDDocument.load(new File(path));
            findPrintService();
        } catch (IOException ex) {
            Logger.getLogger(SaleItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    static List<PrintService> list= new ArrayList<PrintService>();
    private static void findPrintService() {
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
         
        for (PrintService printService : printServices) {
            list.add(printService);
        }
        Printer p = new Printer(list,2);
        
    }
    public static void printNow(int printerIndex){
        try {
            PrinterJob job = PrinterJob.getPrinterJob();
            job.setPageable(new PDFPageable(document));
            job.setPrintService(list.get(printerIndex));
            job.print();
        } catch (PrinterException ex) {
            Logger.getLogger(SaleItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public String getDateFormat() {
        SimpleDateFormat y = new SimpleDateFormat("dd/MM/yyyy");
        Date date = Calendar.getInstance().getTime();
        return y.format(date);
    }

    public String getTimeFormat() {

        SimpleDateFormat y = new SimpleDateFormat("hh:mm a");
        Date date = Calendar.getInstance().getTime();
        return y.format(date);
    }
    
    private void checkBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxItemStateChanged
        if (checkBox.isSelected()) {
            newItemNameField.setBackground(Color.WHITE);
            newItemNameField.setEditable(true);
            itemNameField.setEditable(false);
            itemNameField.setBackground(Color.GRAY);
            itemNameField.setText("");
        } else {
            newItemNameField.setEditable(false);
            newItemNameField.setBackground(Color.GRAY);
            newItemNameField.setText("");
            itemNameField.setEditable(true);
            itemNameField.setBackground(Color.WHITE);

        }
    }//GEN-LAST:event_checkBoxItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String orderedItem = itemNameField.getText();
        String newItem = newItemNameField.getText();
        String orderedQty = qtyField.getText();
        String wt = weightField.getText();
        String rate = rateField.getText();
        String lc = labourCostField.getText();
        String name = "";
        
        if (checkBox.isSelected()) {
            name = newItem;
        } else {
            name = orderedItem;
        }
        if (name.equals("")) {
            AlertMessage msg = new AlertMessage("Please enter the name of the item");
        } else if (selected == 0 && !checkBox.isSelected()) {
            AlertMessage msg = new AlertMessage("Please select the item");
        } else if (orderedQty.equals("") || !Helper.isInt(orderedQty)) {
            AlertMessage msg = new AlertMessage("Please enter the quantity in correct format ");
        } else if (wt.equals("") || !Helper.priceFormatCheck(wt)) {
            AlertMessage msg = new AlertMessage("Please enter the weight in correct format");
        } else if (rate.equals("") || !Helper.priceFormatCheck(rate)) {
            AlertMessage msg = new AlertMessage("Please enter the rate in correct format");
        } else if (lc.equals("") || !Helper.priceFormatCheck(lc)) {
            AlertMessage msg = new AlertMessage("Please enter the labour cost in correct format ");
        } else{
            float q = Float.parseFloat(orderedQty);
            float w = Float.parseFloat(wt);
            float r = Float.parseFloat(rate);
            float l = Float.parseFloat(lc);
            
            float t = w * (r + l);
            ordTableModel.addRow(new Object[] {name, orderedQty, wt, r, l, t});

            total += t;
            totalCostField.setText("Rs. " + total);
            itemNameField.setText("");
            newItemNameField.setText("");
            qtyField.setText("");
            weightField.setText("");
            rateField.setText("");
            labourCostField.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public int getId() {
        String lastId = "1";
        JSONArray array = JsonClass.getJsonArray(Constants.ORDER_ID_FILE);
        if (array.size() > 0) {
            JSONObject obj = (JSONObject) array.get(0);
            lastId = obj.get("lastOrderId").toString();
            int newId = Integer.parseInt(lastId) + 1;
            writeNewId(Integer.toString(newId));
            return newId;
        } else {
            writeNewId(Integer.toString(1));
            return 1;
        }
    }

    public void writeNewId(String id) {
        JSONArray array = new JSONArray();
        JSONObject obj = new JSONObject();
        obj.put("lastOrderId", id);
        array.add(obj);
        FileWriter.write(Constants.ORDER_ID_FILE, array.toString());
    }

    public void updateTable(String keyword) {
        tableModel.setNumRows(0);
        JSONArray array = JsonClass.getJsonArray(Constants.STOCK_FILE);
        for (int i = 0; i < array.size(); i++) {
            JSONObject obj = (JSONObject) array.get(i);
            String id = obj.get("id").toString();
            String name = obj.get("name").toString();
            if (name.toLowerCase().trim().startsWith(keyword.toLowerCase().trim())) {
                tableModel.addRow(new Object[]{id, name});
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField advancePaymentField;
    private javax.swing.JCheckBox checkBox;
    private datechooser.beans.DateChooserCombo dateTv;
    private datechooser.beans.DateChooserCombo deliveryDate;
    private javax.swing.JTextField itemNameField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField labourCostField;
    private javax.swing.JTextField newItemNameField;
    private javax.swing.JTextArea opAddress;
    private javax.swing.JTextField opName;
    private javax.swing.JTextField opPhone;
    private javax.swing.JTable ordItemTable;
    private javax.swing.JTextField qtyField;
    private javax.swing.JTextField rateField;
    private javax.swing.JTable table;
    private javax.swing.JLabel totalCostField;
    private javax.swing.JTextField weightField;
    // End of variables declaration//GEN-END:variables
}
