/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew.shiva.krishna.jewellers;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author sarfraz
 */
public class purchaseReport extends javax.swing.JFrame {

    //{\"date\":\"27\\\/6\\\/16\",\"contractor\":\"first contractor\",\"pp\":\"40\",\"qty\":\"12\",\"name\":\"Ring\",\"id\":1,\"sp\":\"50\"}
    /**
     * Creates new form purchaseReport
     */
    String path = "";

    public purchaseReport() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromDateChoser = new datechooser.beans.DateChooserCombo();
        toDateChoser = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();
        dir = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(650, 350));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Purchase Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("From    :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("To       :");

        fromDateChoser.setCalendarPreferredSize(new java.awt.Dimension(350, 220));

        toDateChoser.setCalendarPreferredSize(new java.awt.Dimension(350, 220));

        jButton1.setText("Choose Directory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dir.setText("Not Chosen ...");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Save Purchase Report as PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fromDateChoser, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                                    .addComponent(toDateChoser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(fromDateChoser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(toDateChoser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(dir))
                .addGap(48, 48, 48)
                .addComponent(jButton2)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        path = Helper.choseDir();
        dir.setText(path);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (path.equals("") || path.equals("cancelled")) {
            AlertMessage msg = new AlertMessage("Please choose a directory to save the report");
        } else {
            JSONArray array = JsonClass.getJsonArray(Constants.PURCHASE_RECORD_FILE);
            JSONParser parser = new JSONParser();
            Object o;
            Document document = new Document();

            try {
                SimpleDateFormat y = new SimpleDateFormat("dd-MM-yyyy");
                String from = y.format(fromDateChoser.getSelectedDate().getTime());
                String to = y.format(toDateChoser.getSelectedDate().getTime());
                String file = path+"/"+from+"--"+to+"_purchase_report.pdf";
                
                
                PdfWriter.getInstance(document, new FileOutputStream(file));                    //change the name of the file according to the cudtomer id
                document.open();

                

                Paragraph header = new Paragraph("Purchase Report : " + from + " - " + to, FontFactory.getFont(FontFactory.TIMES_BOLD, 10, Font.ITALIC, BaseColor.BLACK));
                header.setAlignment(Element.ALIGN_CENTER);
                document.add(header);
                
                document.add(new Paragraph(" "));

                //id, name, pd, qty+unit, contractor, pp, sp
                float[] columnWidths = new float[]{2f,2f, 3f, 3f, 3f, 3f, 3f, 3f,3f,3f};
                PdfPTable table = new PdfPTable(10);
                table.setWidthPercentage(100);
                table.setWidths(columnWidths);

                table.addCell("Id");
                table.addCell("Stock Id");
                table.addCell("Item Name");
                table.addCell("Purchase Date");
                table.addCell("Weight");
                table.addCell("Piece");
                table.addCell("Contractor");
                table.addCell("Purchase Price");
                table.addCell("Sale Price");
                table.addCell("Purchase % ");

                for (int i = 0; i < array.size(); i++) {
                    o = parser.parse(array.get(i).toString());
                    JSONObject obj = (JSONObject) o;
                    //{\"date\":\"27\\\/6\\\/16\",\"contractor\":\"first contractor\",\"pp\":\"40\",\"qty\":\"12\",\"name\":\"Ring\",\"id\":1,\"sp\":\"50\"}

                    String date = obj.get("date").toString();
                    String contractor = obj.get("contractor").toString();
                    String pp = obj.get("purchasePrice").toString();
                    String qty = obj.get("quantity").toString();
                    String pieces = obj.get("pieces").toString();
                    String name = obj.get("name").toString();
                    String stockID = obj.get("stockID").toString();
                    String id = obj.get("id").toString();
                    String sp = obj.get("salePrice").toString();
                    String unit = obj.get("unit").toString();
                    String purchPer = obj.get("purchasePerc").toString();

                    Date targetDate = new SimpleDateFormat("dd/MM/yy", Locale.ENGLISH).parse(date);
                    y = new SimpleDateFormat("dd/MM/yy");

                    Date toDate = toDateChoser.getSelectedDate().getTime();
                    Date fromDate = fromDateChoser.getSelectedDate().getTime();

                    String toDateStr = y.format(toDate);
                    String fromDateStr = y.format(fromDate);

                    Date toD = new SimpleDateFormat("dd/MM/yy", Locale.ENGLISH).parse(toDateStr);
                    Date fromD = new SimpleDateFormat("dd/MM/yy", Locale.ENGLISH).parse(fromDateStr);

                    if (DateCompare.inRange(fromD, targetDate, toD)) {
                        table.addCell(id);
                        table.addCell(stockID);
                        table.addCell(name);
                        table.addCell(date);
                        table.addCell(qty+" "+unit);
                        table.addCell(pieces);
                        table.addCell(contractor);
                        table.addCell(pp);
                        table.addCell(sp);
                        table.addCell(purchPer);
                    }
                }
                document.add(table);

                document.close();
            } catch (DocumentException ex) {
                Logger.getLogger(purchaseReport.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(purchaseReport.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(purchaseReport.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.text.ParseException ex) {
                Logger.getLogger(purchaseReport.class.getName()).log(Level.SEVERE, null, ex);
            }

            dispose();
             AlertMessage msg = new AlertMessage("Report saved - "+path);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dir;
    private datechooser.beans.DateChooserCombo fromDateChoser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private datechooser.beans.DateChooserCombo toDateChoser;
    // End of variables declaration//GEN-END:variables
}
