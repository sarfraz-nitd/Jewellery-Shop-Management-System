/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgnew.shiva.krishna.jewellers;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.DatatypeConverter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author sarfraz
 */
public class Activation extends javax.swing.JFrame {

    /**
     * Creates new form Activation
     */
    public Activation() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        key = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Software Activation");
        setLocation(new java.awt.Point(600, 200));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter The Activation Key", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setText("Activation Key :");

        key.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        key.setToolTipText("");

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Loading l = new Loading();  

        if (Helper.testInet("google.com")) {
            AlertMessage msg = new AlertMessage("Please Wait ...");
            String actKey = key.getText().toString();
            SimpleDateFormat y = new SimpleDateFormat("dd/MM/yyyy");
            String date = y.format(Calendar.getInstance().getTime());
            if(actKey.charAt(3) == 'a'){
                date = DateCompare.afterOneYearDate();
            }else if(actKey.charAt(3)=='b'){
                date = DateCompare.afterTwoYearDate();
            }else if(actKey.charAt(3)=='c'){
                date = DateCompare.afterThreeYearDate();
            }
            try {
                if (Helper.verifyKeyFromServer(actKey, date).equals("success")) {
                    super.dispose();
                    msg.dispose();
                    writeDateToFile(date);
                    //Main main = new Main();
                    SelectDbFolderForm df = new SelectDbFolderForm();
                } else {
                    System.out.println(Helper.verifyKeyFromServer(actKey, date));
                    msg.dispose();
                    AlertMessage msg2 = new AlertMessage("Sorry!! Activation Key is not correct..");
                }
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Activation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Activation.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            AlertMessage msg = new AlertMessage("Please Connect To Internet");
        }

        /*String actKey = key.getText().toString();
         if(actKey.equals("")){
         Main main = new Main();
         //AlertMessage msg = new AlertMessage(Helper.getMD5value("sarf"));
         System.out.println(Helper.getMD5value("2"));
         }  */
    }//GEN-LAST:event_jButton1ActionPerformed

    public void writeDateToFile(String date) {
        //JSONParser parser = new JSONParser();
        /*JSONArray array = JsonClass.getJsonArray(Constants.APPLICATION_DATA);
         if (array.size() != 0) {
         try {
         Object o = parser.parse(array.get(0).toString());
         JSONObject obj = (JSONObject) o;
         //date = obj.get("date").toString();
         obj.put("date", DateCompare.afterOneYearDate()+" 00:00");
         } catch (ParseException ex) {
         Logger.getLogger(ManageItems.class.getName()).log(Level.SEVERE, null, ex);
         }
         }else{*/
        JSONArray array = new JSONArray();
        JSONObject obj = new JSONObject();
        obj.put("aaaaa", encode(date + " 00:00"));
        array.add(obj);
        //obj = new JSONObject();
        //obj.put("update_link", Helper.updateLink(1));
        //array.add(obj);
        
        //}
        //FileWriter.write(Constants.APPLICATION_DATA, array.toString());

        try {
            File filePath = new File(Constants.APPLICATION_DATA);
            filePath.getParentFile().mkdirs();
            FileOutputStream os = new FileOutputStream(filePath);
            OutputStreamWriter osw = new OutputStreamWriter(os);
            Writer w = new BufferedWriter(osw);
            w.write(array.toString());
            w.close();

        } catch (IOException e) {
            System.err.println("Problem writing to the file ");
        }

    }

    public String encode(String s) {
        String encoded="";
        try {
            byte[] message = s.getBytes("UTF-8");
            encoded = DatatypeConverter.printBase64Binary(message);
           
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Activation.class.getName()).log(Level.SEVERE, null, ex);
        }
        return encoded;
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField key;
    // End of variables declaration//GEN-END:variables
}
